 <h2 class="page_topic">
              Sorting Algorithms Explained with Code Examples â”€â”€â”€
            </h2>
            <span class="name_credit"
              ><img
                src="https://www.youtube.com/favicon.ico"
                alt="credit"
                class="credit"
              />
              <p>Blog Post By <b>Deepanshu Knox</b></p></span
            >

            <p class="page_paras" style="padding-top: 15px">
              Sorting is a core concept in programming. Whether itâ€™s arranging
              numbers or ordering words, sorting algorithms help organize data
              efficiently. Here's a quick guide to common sorting techniques
              every beginner must understand.
            </p>

            <div
              class="section-separator"
              style="
                height: 1px;
                margin: 18px 0;
                background: var(--light-gray-color);
              "
            ></div>

            <img
              src="./images/blog3.png"
              alt="blogimage"
              style="max-width: 550px; width: 100%; margin: auto"
            />

            <h3 class="sub_topics" style="padding-top: 10px">
              ðŸ”¸ 1. Bubble Sort
            </h3>
            <p class="page_paras" style="padding-block: 5px">
              Bubble Sort repeatedly compares and swaps adjacent elements if
              they're in the wrong order. Itâ€™s simple but not very efficient.
            </p>

            <pre class="language-javascript"><code>function bubbleSort(arr) {
  for (let i = 0; i &lt; arr.length; i++) {
    for (let j = 0; j &lt; arr.length - i - 1; j++) {
      if (arr[j] &gt; arr[j + 1]) {
        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
      }
    }
  }
  return arr;
}
</code></pre>

            <h3 class="sub_topics" style="padding-top: 10px">
               Example Input:
            </h3>
            <pre
              class="language-javascript"
            ><code>console.log(bubbleSort([5, 2, 9, 1]));
</code></pre>

            <h3 class="sub_topics" style="padding-top: 10px"> Output:</h3>
            <pre class="language-javascript"><code>[1, 2, 5, 9]
</code></pre>

            <h3 class="sub_topics" style="padding-top: 10px">
              ðŸ”¸ 2. Selection Sort
            </h3>
            <p class="page_paras" style="padding-block: 5px">
              This algorithm selects the minimum element from the unsorted part
              and puts it at the beginning.
            </p>

            <pre class="language-javascript"><code>function selectionSort(arr) {
  for (let i = 0; i &lt; arr.length; i++) {
    let min = i;
    for (let j = i + 1; j &lt; arr.length; j++) {
      if (arr[j] &lt; arr[min]) {
        min = j;
      }
    }
    [arr[i], arr[min]] = [arr[min], arr[i]];
  }
  return arr;
}
</code></pre>

            <h3 class="sub_topics" style="padding-top: 10px">
              ðŸ”¸ 3. Insertion Sort
            </h3>
            <p class="page_paras" style="padding-block: 5px">
              Builds the final sorted array one element at a time by inserting
              elements into their correct position.
            </p>

            <pre class="language-javascript"><code>function insertionSort(arr) {
  for (let i = 1; i &lt; arr.length; i++) {
    let key = arr[i];
    let j = i - 1;
    while (j &gt;= 0 &amp;&amp; arr[j] &gt; key) {
      arr[j + 1] = arr[j];
      j--;
    }
    arr[j + 1] = key;
  }
  return arr;
}
</code></pre>

            <h3 class="sub_topics" style="padding-top: 10px">
              ðŸ”¸ 4. Built-in JavaScript Sort (Bonus)
            </h3>
            <p class="page_paras" style="padding-block: 5px">
              JavaScript's built-in sort uses an optimized version of QuickSort
              and Insertion Sort behind the scenes.
            </p>

            <pre class="language-javascript"><code>const arr = [4, 1, 3, 9];
arr.sort((a, b) =&gt; a - b); // Ascending
console.log(arr); // [1, 3, 4, 9]
</code></pre>

            <h3 class="sub_topics" style="padding-top: 10px">
               Which One Should You Use?
            </h3>
            <p class="page_paras" style="padding-block: 5px">
              For learning: Bubble, Selection, and Insertion teach the basics of
              sorting logic. For real projects: Use built-in sort or advanced
              algorithms like Merge Sort and Quick Sort for better efficiency.
            </p>

            <h3 class="sub_topics" style="padding-top: 10px"> Our Final Words About this</h3>
            <p class="page_paras" style="padding-block: 5px">
              Sorting helps you prepare for arrays, searching, and logic-based
              problems. Mastering just a few types is enough to crack beginner
              and intermediate questions with ease.
            </p>
